local Players = game:GetService("Players")
local player = Players.LocalPlayer
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.ResetOnSpawn = false

-- Create UI button
local ageButton = Instance.new("TextButton")
ageButton.Size = UDim2.new(0, 120, 0, 40)
ageButton.Position = UDim2.new(1, -150, 0.5, -20) -- Middle right
ageButton.AnchorPoint = Vector2.new(0, 0)
ageButton.Text = "Age to 50"
ageButton.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
ageButton.TextColor3 = Color3.new(1, 1, 1)
ageButton.Parent = gui

-- Progress Bar Frame
local progressFrame = Instance.new("Frame")
progressFrame.Size = UDim2.new(0, 300, 0, 30)
progressFrame.Position = UDim2.new(0.5, -150, 0.7, 0)
progressFrame.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
progressFrame.Visible = false
progressFrame.Parent = gui

-- Fill inside progress bar
local fill = Instance.new("Frame")
fill.Size = UDim2.new(0, 0, 1, 0)
fill.BackgroundColor3 = Color3.fromRGB(50, 205, 50)
fill.Parent = progressFrame

-- Percentage label
local percentLabel = Instance.new("TextLabel")
percentLabel.Size = UDim2.new(1, 0, 1, 0)
percentLabel.BackgroundTransparency = 1
percentLabel.TextColor3 = Color3.new(0, 0, 0)
percentLabel.TextScaled = true
percentLabel.Text = "0%"
percentLabel.Parent = progressFrame

-- Simulated pet holding check
local function getHeldPet()
    local char = player.Character
    if not char then return nil end
    for _, tool in pairs(char:GetChildren()) do
        if tool:IsA("Tool") and tool:FindFirstChild("Age") then
            return tool
        end
    end
    return nil
end

-- Handle button click
local isAging = false
ageButton.MouseButton1Down:Connect(function()
    if isAging then return end

    local heldPet = getHeldPet()
    if not heldPet then
        warn("No pet held!")
        return
    end

    local ageValue = heldPet:FindFirstChild("Age")
    if not ageValue or not ageValue:IsA("NumberValue") then
        warn("Pet has no Age NumberValue.")
        return
    end

    if ageValue.Value >= 50 then
        warn("Already age 50 or above.")
        return
    end

    -- Start visual aging
    isAging = true
    progressFrame.Visible = true
    local duration = 300 -- 5 minutes
    local startAge = ageValue.Value
    local targetAge = 50

    for i = 1, duration do
        if not isAging then break end
        task.wait(1)
        local percent = i / duration
        fill.Size = UDim2.new(percent, 0, 1, 0)
        percentLabel.Text = string.format("%.0f%%", percent * 100)
        -- Visual aging logic
        ageValue.Value = math.floor(startAge + (targetAge - startAge) * percent)
    end

    ageValue.Value = targetAge
    percentLabel.Text = "100%"
    isAging = false
end)
