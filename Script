-- Services
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- GUI elements (adjust these to your actual GUI hierarchy)
local screenGui = script.Parent
local ageButton = screenGui:WaitForChild("AgeTo50Button") -- Button named "AgeTo50Button"
local progressText = screenGui:WaitForChild("ProgressText") -- TextLabel to show percent, e.g. "Loading: 0%"

-- Function to get the pet player is currently holding
local function getHeldPet()
    -- Replace this with your actual method to get the held pet instance
    -- Example: player.Character.HeldPet or player.PlayerGui.HeldPet, etc.
    local player = game.Players.LocalPlayer
    local character = player.Character
    if not character then return nil end

    -- Example: Assume pet is a child named "HeldPet" in the character
    local pet = character:FindFirstChild("HeldPet")
    return pet
end

-- Function to safely get pet's Age NumberValue
local function getPetAgeValue(pet)
    if not pet then return nil end
    local ageValue = pet:FindFirstChild("Age")
    if ageValue and ageValue:IsA("NumberValue") then
        return ageValue
    end
    return nil
end

-- Constants
local TARGET_AGE = 50
local DURATION_SECONDS = 5 * 60 -- 5 minutes

-- Variables
local holdingButton = false
local elapsedTime = 0

-- Main function to handle age increasing over time while button is held
local function onButtonPressed()
    local pet = getHeldPet()
    if not pet then
        progressText.Text = "No held pet detected."
        return
    end

    local ageValue = getPetAgeValue(pet)
    if not ageValue then
        progressText.Text = "Pet has no Age value."
        return
    end

    if ageValue.Value >= TARGET_AGE then
        progressText.Text = "Pet is already age 50 or older."
        return
    end

    holdingButton = true
    elapsedTime = 0
    progressText.Text = "Loading: 0%"

    -- Use RunService.Heartbeat for smooth update
    local connection
    connection = RunService.Heartbeat:Connect(function(deltaTime)
        if not holdingButton then
            connection:Disconnect()
            return
        end

        elapsedTime = elapsedTime + deltaTime
        local progress = math.clamp(elapsedTime / DURATION_SECONDS, 0, 1)
        progressText.Text = string.format("Loading: %d%%", math.floor(progress * 100))

        -- Calculate new age based on progress
        local startAge = ageValue.Value
        local newAge = math.floor(startAge + (TARGET_AGE - startAge) * progress)
        if newAge > ageValue.Value then
            ageValue.Value = newAge
        end

        if progress >= 1 then
            holdingButton = false
            progressText.Text = "Done! Pet is now age 50."
            connection:Disconnect()
        end
    end)
end

local function onButtonReleased()
    holdingButton = false
    progressText.Text = "Loading stopped."
end

-- Connect button events
ageButton.MouseButton1Down:Connect(onButtonPressed)
ageButton.MouseButton1Up:Connect(onButtonReleased)
ageButton.MouseLeave:Connect(onButtonReleased)

-- Optional: reset progress text on script start
progressText.Text = ""
