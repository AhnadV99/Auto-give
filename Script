local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "PetAgeGui"
gui.ResetOnSpawn = false

-- UI Button
local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 120, 0, 40)
button.Position = UDim2.new(1, -140, 0.5, -20) -- middle right side
button.AnchorPoint = Vector2.new(0, 0.5)
button.Text = "Age +1"
button.BackgroundColor3 = Color3.fromRGB(30, 144, 255)
button.TextColor3 = Color3.new(1, 1, 1)
button.Font = Enum.Font.GothamBold
button.TextSize = 18
button.Parent = gui

-- Progress bar
local progressBarBG = Instance.new("Frame")
progressBarBG.Size = UDim2.new(0, 120, 0, 10)
progressBarBG.Position = UDim2.new(1, -140, 0.5, 30)
progressBarBG.AnchorPoint = Vector2.new(0, 0.5)
progressBarBG.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
progressBarBG.Parent = gui

local progressBar = Instance.new("Frame")
progressBar.Size = UDim2.new(0, 0, 1, 0)
progressBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
progressBar.Parent = progressBarBG

-- Error message
local errorText = Instance.new("TextLabel")
errorText.Size = UDim2.new(0, 300, 0, 25)
errorText.Position = UDim2.new(0.5, -150, 0.6, 0)
errorText.AnchorPoint = Vector2.new(0.5, 0)
errorText.TextColor3 = Color3.fromRGB(255, 0, 0)
errorText.Text = ""
errorText.BackgroundTransparency = 1
errorText.Font = Enum.Font.Gotham
errorText.TextScaled = true
errorText.Visible = false
errorText.Parent = gui

local function findHeldPet()
	for _, item in ipairs(character:GetChildren()) do
		if item:IsA("Tool") and item:FindFirstChild("Age") then
			return item
		end
	end
	return nil
end

local function showError(text)
	errorText.Text = text
	errorText.Visible = true
	wait(2)
	errorText.Visible = false
end

local isBusy = false

button.MouseButton1Click:Connect(function()
	if isBusy then return end

	local pet = findHeldPet()
	if not pet then
		showError("❌ No pet held! Hold a pet tool.")
		return
	end

	local ageValue = pet:FindFirstChild("Age")
	if not ageValue or not ageValue:IsA("IntValue") then
		showError("❌ Pet has no 'Age' IntValue!")
		return
	end

	isBusy = true
	local duration = 5
	local startTime = tick()

	while tick() - startTime < duration do
		local percent = math.clamp((tick() - startTime) / duration, 0, 1)
		progressBar.Size = UDim2.new(percent, 0, 1, 0)
		RunService.RenderStepped:Wait()
	end

	ageValue.Value += 1
	progressBar.Size = UDim2.new(0, 0, 1, 0)
	isBusy = false
end)
