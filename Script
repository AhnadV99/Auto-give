-- Put this LocalScript inside a ScreenGui

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local gui = script.Parent

-- Create the button
local ageButton = Instance.new("TextButton")
ageButton.Name = "AgeButton"
ageButton.Size = UDim2.new(0, 150, 0, 50)
ageButton.Position = UDim2.new(1, -160, 0.5, -25) -- middle right side
ageButton.AnchorPoint = Vector2.new(0, 0)
ageButton.Text = "Age to 50"
ageButton.BackgroundColor3 = Color3.fromRGB(30, 144, 255)
ageButton.TextColor3 = Color3.new(1, 1, 1)
ageButton.Font = Enum.Font.GothamBold
ageButton.TextSize = 20
ageButton.Parent = gui

-- Create loading UI
local loadingFrame = Instance.new("Frame")
loadingFrame.Size = UDim2.new(1, 0, 1, 0)
loadingFrame.BackgroundTransparency = 0.4
loadingFrame.BackgroundColor3 = Color3.new(0, 0, 0)
loadingFrame.Visible = false
loadingFrame.ZIndex = 10
loadingFrame.Parent = gui

local loadingText = Instance.new("TextLabel")
loadingText.Size = UDim2.new(1, 0, 1, 0)
loadingText.Text = "Loading... 0%"
loadingText.TextColor3 = Color3.new(1, 1, 1)
loadingText.Font = Enum.Font.SourceSansBold
loadingText.TextScaled = true
loadingText.BackgroundTransparency = 1
loadingText.Parent = loadingFrame

-- Hold detection and timer
local holdConnection
local holding = false
local duration = 300 -- 5 minutes
local interval = duration / 17 -- adds age every ~17.6s from age 33 to 50
local visualAge = nil

local function getHeldPet()
	for _, tool in ipairs(player.Character:GetChildren()) do
		if tool:IsA("Tool") and tool:FindFirstChild("Handle") then
			return tool
		end
	end
	return nil
end

local function simulateAging()
	local pet = getHeldPet()
	if not pet then
		warn("No pet held!")
		return
	end

	local petName = pet.Name
	local age = 0

	-- Try to extract visual age if readable
	for _, v in ipairs(pet:GetChildren()) do
		if v:IsA("StringValue") and v.Name == "Age" then
			age = tonumber(v.Value) or 0
		end
	end

	if age >= 50 then
		return
	end

	visualAge = age
	loadingFrame.Visible = true
	local percent = 0
	local steps = 50 - visualAge
	local tickInterval = duration / steps

	for i = 1, steps do
		if not holding then break end
		wait(tickInterval)
		visualAge += 1
		percent = math.floor((visualAge / 50) * 100)
		loadingText.Text = "Aging " .. petName .. ": " .. percent .. "% [Age: " .. visualAge .. "]"
	end

	loadingText.Text = "Done! Age: 50"
	wait(1)
	loadingFrame.Visible = false
end

ageButton.MouseButton1Down:Connect(function()
	if holding then return end
	local pet = getHeldPet()
	if not pet then
		loadingText.Text = "No pet held!"
		loadingFrame.Visible = true
		wait(2)
		loadingFrame.Visible = false
		return
	end
	holding = true
	simulateAging()
end)

ageButton.MouseButton1Up:Connect(function()
	holding = false
end)
