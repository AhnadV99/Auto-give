local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.Name = "PetAgeGui"

local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 200, 0, 50)
button.Position = UDim2.new(0.5, -100, 0.5, -25)
button.Text = "Age to 50"
button.Parent = screenGui

local loadingBarBG = Instance.new("Frame")
loadingBarBG.Size = UDim2.new(0, 200, 0, 20)
loadingBarBG.Position = UDim2.new(0.5, -100, 0.5, 35)
loadingBarBG.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
loadingBarBG.BorderSizePixel = 1
loadingBarBG.Parent = screenGui

local loadingBarFill = Instance.new("Frame")
loadingBarFill.Size = UDim2.new(0, 0, 1, 0)
loadingBarFill.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
loadingBarFill.Parent = loadingBarBG

local percentLabel = Instance.new("TextLabel")
percentLabel.Size = UDim2.new(1, 0, 1, 0)
percentLabel.BackgroundTransparency = 1
percentLabel.Text = "0%"
percentLabel.TextColor3 = Color3.new(1,1,1)
percentLabel.Parent = loadingBarBG

local petAgeLabel = Instance.new("TextLabel")
petAgeLabel.Size = UDim2.new(0, 200, 0, 50)
petAgeLabel.Position = UDim2.new(0.5, -100, 0.5, 70)
petAgeLabel.Text = "Pet Age: (unknown)"
petAgeLabel.Parent = screenGui

local totalHoldTime = 300 -- 5 minutes
local holdTime = 0
local holding = false

-- This function should get your currently held pet instance
-- Replace this with your actual method to get the pet
local function getHeldPet()
    -- Example: pet is child of character named "Pet"
    local character = player.Character
    if character then
        local pet = character:FindFirstChild("Pet")
        if pet then return pet end
    end
    return nil
end

local function updatePetAgeLabel(pet)
    if pet then
        local ageValue = pet:FindFirstChild("Age")
        if ageValue and ageValue:IsA("IntValue") then
            petAgeLabel.Text = "Pet Age: "..ageValue.Value
            return
        end
    end
    petAgeLabel.Text = "Pet Age: (unknown)"
end

button.MouseButton1Down:Connect(function()
    if holding then return end
    local pet = getHeldPet()
    if not pet then
        petAgeLabel.Text = "No pet held!"
        return
    end

    holding = true
    holdTime = 0

    -- Update the pet age label initially
    updatePetAgeLabel(pet)
end)

button.MouseButton1Up:Connect(function()
    holding = false
    holdTime = 0
    loadingBarFill.Size = UDim2.new(0, 0, 1, 0)
    percentLabel.Text = "0%"
    -- update pet age label in case something changed
    local pet = getHeldPet()
    updatePetAgeLabel(pet)
end)

RunService.RenderStepped:Connect(function(dt)
    if holding then
        local pet = getHeldPet()
        if not pet then
            holding = false
            petAgeLabel.Text = "No pet held!"
            loadingBarFill.Size = UDim2.new(0, 0, 1, 0)
            percentLabel.Text = "0%"
            return
        end

        holdTime = holdTime + dt
        local percent = math.clamp(holdTime / totalHoldTime, 0, 1)
        loadingBarFill.Size = UDim2.new(percent, 0, 1, 0)
        percentLabel.Text = math.floor(percent * 100).."%"

        if percent >= 1 then
            -- Set pet age to 50
            local ageValue = pet:FindFirstChild("Age")
            if ageValue and ageValue:IsA("IntValue") then
                ageValue.Value = 50
            else
                -- If no Age IntValue, create one
                local newAge = Instance.new("IntValue")
                newAge.Name = "Age"
                newAge.Value = 50
                newAge.Parent = pet
            end

            petAgeLabel.Text = "Pet Age: 50"
            holding = false
        else
            -- Update label to current age (if changes externally)
            updatePetAgeLabel(pet)
        end
    end
end)
