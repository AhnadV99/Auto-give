local Players = game:GetService("Players")
local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- UI Setup
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "PetAgeGUI"

local ageButton = Instance.new("TextButton")
ageButton.Size = UDim2.new(0, 160, 0, 50)
ageButton.Position = UDim2.new(1, -180, 0.5, -25) -- Middle-right
ageButton.AnchorPoint = Vector2.new(0, 0)
ageButton.Text = "Age to 50"
ageButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ageButton.TextColor3 = Color3.new(1, 1, 1)
ageButton.Parent = screenGui

local progressBar = Instance.new("Frame")
progressBar.Size = UDim2.new(0, 160, 0, 5)
progressBar.Position = UDim2.new(0, 0, 1, -5)
progressBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
progressBar.BorderSizePixel = 0
progressBar.Size = UDim2.new(0, 0, 0, 5)
progressBar.Parent = ageButton

local percentText = Instance.new("TextLabel", ageButton)
percentText.Size = UDim2.new(1, 0, 1, 0)
percentText.Position = UDim2.new(0, 0, 0, 0)
percentText.BackgroundTransparency = 1
percentText.TextColor3 = Color3.fromRGB(255, 255, 255)
percentText.TextScaled = true
percentText.Text = ""

-- Pet Age Logic (Visual only)
local holding = false
local runService = game:GetService("RunService")

local function getHeldPet()
	for _, obj in pairs(player.Character and player.Character:GetChildren() or {}) do
		if obj:IsA("Tool") and obj:FindFirstChild("Handle") then
			if obj:FindFirstChild("Age") then
				return obj
			end
		end
	end
	return nil
end

local function getVisualAge(tool)
	local ageValue = tool:FindFirstChild("Age")
	if ageValue and ageValue:IsA("NumberValue") then
		return ageValue.Value
	end
	return 0
end

local function setVisualAge(tool, age)
	local ageValue = tool:FindFirstChild("Age")
	if not ageValue then
		ageValue = Instance.new("NumberValue")
		ageValue.Name = "Age"
		ageValue.Parent = tool
	end
	ageValue.Value = age
end

local function visuallyAgePet()
	local pet = getHeldPet()
	if not pet then
		ageButton.Text = "No Pet Held"
		wait(1)
		ageButton.Text = "Age to 50"
		return
	end

	local currentAge = getVisualAge(pet)
	if currentAge >= 50 then
		ageButton.Text = "Already Age 50"
		wait(1)
		ageButton.Text = "Age to 50"
		return
	end

	local totalTime = 300 -- 5 mins
	local targetAge = 50
	local ageToAdd = targetAge - currentAge
	local timePerAge = totalTime / ageToAdd

	local progress = 0
	local lastTime = tick()

	while holding and progress < 1 and currentAge < targetAge do
		local now = tick()
		local delta = now - lastTime
		lastTime = now

		progress += delta / totalTime
		progressBar.Size = UDim2.new(progress, 0, 0, 5)
		percentText.Text = tostring(math.floor(progress * 100)) .. "%"

		if now - lastTime >= timePerAge then
			currentAge += 1
			setVisualAge(pet, currentAge)
		end

		wait(0.05)
	end

	if currentAge >= targetAge then
		percentText.Text = "100%"
		ageButton.Text = "Age Done"
		wait(2)
		ageButton.Text = "Age to 50"
	end

	progressBar.Size = UDim2.new(0, 0, 0, 5)
	percentText.Text = ""
end

-- Events
ageButton.MouseButton1Down:Connect(function()
	holding = true
	visuallyAgePet()
end)

ageButton.MouseButton1Up:Connect(function()
	holding = false
end)
